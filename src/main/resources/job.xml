<beans:beans xmlns="http://www.springframework.org/schema/batch"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/batch
           http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

    <beans:import resource="classpath:ApplicationContext.xml"/>

    <!--<job-repository id="jobRepository" data-source="dataSource" isolation-level-for-create=""-->
                    <!--transaction-manager="transactionManager" table-prefix="batch_" />-->

    <beans:bean id="myJobListener" class="com.xdz.batch.MyJobListener" />

    <job id="testJob">
        <listeners>
            <listener ref="myJobListener" after-job-method="afterJob" before-job-method="beforeJob" />
        </listeners>
        <step id="step1">
            <tasklet allow-start-if-complete="true">
                <chunk reader="itemReader" processor="itemProcessor" writer="itemWriter" commit-interval="1"/>
            </tasklet>
        </step>
    </job>

    <beans:bean  id = "jobExplorer"  class = "org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <beans:bean  id = "jobRegistry"  class = "org.springframework.batch.core.configuration.support.MapJobRegistry" />

    <beans:bean class="org.springframework.batch.core.configuration.support.AutomaticJobRegistrar">
        <beans:property name="applicationContextFactories">
            <beans:bean class="org.springframework.batch.core.configuration.support.ClasspathXmlApplicationContextsFactoryBean">
                <beans:property name="resources" value="classpath*:job.xml" />
            </beans:bean>
        </beans:property>
        <beans:property name="jobLoader">
            <beans:bean class="org.springframework.batch.core.configuration.support.DefaultJobLoader">
                <beans:property name="jobRegistry" ref="jobRegistry" />
            </beans:bean>
        </beans:property>
    </beans:bean>

    <beans:bean  id = "jobOperator"  class = "org.springframework.batch.core.launch.support.SimpleJobOperator">
        <beans:property name="jobRepository" ref="jobRepository" />
        <beans:property name="jobRegistry" ref="jobRegistry" />
        <beans:property name="jobLauncher" ref="jobLauncher" />
        <beans:property name="jobExplorer" ref="jobExplorer" />
    </beans:bean>

    <beans:bean id="transactionManager"
                class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <beans:bean  id="jobRepository"
                 class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <beans:property name="transactionManager" ref="transactionManager" />
    </beans:bean>
    <beans:bean  id="jobLauncher"
                 class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <beans:property name="jobRepository" ref="jobRepository" />
        <beans:property name="taskExecutor" ref="taskExecutor" />
    </beans:bean>
    <!--事务管理器，用于springbatch框架在对数据操作过程中体统事务能力-->


    <beans:bean id="itemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="sql" value="select * from x_user where age=1" />
        <beans:property name="rowMapper" ref="userRowMapper" />
    </beans:bean>

    <beans:bean id="itemProcessor" class="com.xdz.batch.MyProcessor" />

    <beans:bean id="itemWriter" class="com.xdz.batch.MyWrite" />

    <beans:bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

</beans:beans>